{"version":3,"sources":["admin/metrics/metrics.service.ts"],"names":[],"mappings":";;;IAOA,2BAAmC,UAAU;QACzC,IAAI,OAAO,GAAG;YACV,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,UAAU;SACzB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC;QAEf;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,SAAS,EAAE;gBAC3D,IAAI,CAAE,UAAC,QAAQ;gBACX,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QAED;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE;gBAC/C,IAAI,CAAC,UAAA,QAAQ;gBACT,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IArBD,iDAqBC,CAAA;;;;;;YAvBD,iBAAiB,CAAC,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC","file":"admin/metrics/metrics.service.js","sourcesContent":["import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\nJhiMetricsService.$inject = ['$rootScope'];\n\nexport function JhiMetricsService ($rootScope) {\n    var service = {\n        getMetrics: getMetrics,\n        threadDump: threadDump\n    };\n\n    return service;    \n\n    function getMetrics () {\n        return this.http.get('management/jhipster/metrics').toPromise().\n            then( (response) => {\n                return response.data;\n        });\n    }\n\n    function threadDump () {\n        return this.http.get('management/dump').toPromise().\n            then(response => {\n                return response.data;\n        });\n    }\n}"],"sourceRoot":"/source/"}