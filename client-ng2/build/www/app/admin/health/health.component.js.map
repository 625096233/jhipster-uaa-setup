{"version":3,"sources":["admin/health/health.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAKI,iCAAiC,SAAS,EAAU,gBAAiC;oBAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;oBACjF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,CAAC;gBAED,0CAAQ,GAAR;oBACI,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBAED,0CAAQ,GAAR,UAAS,IAAI;oBACT,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACnD,CAAC;gBAED,+CAAa,GAAb,UAAc,WAAW;oBACrB,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;wBACvB,MAAM,CAAC,eAAe,CAAC;oBAC3B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,cAAc,CAAC;oBAC1B,CAAC;gBACL,CAAC;gBAED,yCAAO,GAAP;oBAAA,iBAOC;oBANG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAE3B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;wBAChD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;wBACpE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAChC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,4CAAU,GAAV,UAAW,MAAM;oBACb,IAAI,EAAE,GAAG,IAAI,CAAC;oBACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAChB,WAAW,EAAE,oCAAoC;wBACjD,UAAU,EAAE,0BAA0B;wBACtC,YAAY,EAAE,IAAI;wBAClB,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE;4BACL,aAAa,EAAE;gCACX,MAAM,CAAC,MAAM,CAAC;4BAClB,CAAC;4BACD,QAAQ,EAAE;gCACN,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;4BACvB,CAAC;4BACD,aAAa,EAAE;gCACX,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC;4BAC5B,CAAC;yBAEJ;qBACJ,CAAC,CAAC;gBACP,CAAC;gBAED,+CAAa,GAAb,UAAc,IAAI;oBACd,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACxD,CAAC;gBA/DL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,WAAW,EAAE,8BAA8B;wBAC3C,KAAK,EAAE,CAAC,8BAAa,CAAC;qBACzB,CAAC;+BAMe,aAAM,CAAC,WAAW,CAAC;;2CANlC;gBA6DF,8BAAC;YAAD,CA5DA,AA4DC,IAAA;YA5DD,6DA4DC,CAAA","file":"admin/health/health.component.js","sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\nimport { JhiHealthService } from \"./health.service\";\nimport { TranslatePipe } from '../../shared/translate.pipe';\n\n@Component({\n    selector: 'jhi-health',\n    templateUrl: 'app/admin/health/health.html',\n    pipes: [TranslatePipe]\n})\nexport class JhiHealthCheckComponent implements OnInit {\n    healthData:any;\n    updatingHealth:boolean;\n    $uibModal: any;\n\n    constructor(@Inject('$uibModal') $uibModal, private jhiHealthService:JhiHealthService) {\n        this.$uibModal = $uibModal;\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    baseName(name) {\n        return this.jhiHealthService.getBaseName(name);\n    }\n\n    getLabelClass(statusState) {\n        if (statusState === 'UP') {\n            return 'label-success';\n        } else {\n            return 'label-danger';\n        }\n    }\n\n    refresh() {\n        this.updatingHealth = true;\n\n        this.jhiHealthService.checkHealth().subscribe(health => {\n            this.healthData = this.jhiHealthService.transformHealthData(health);\n            this.updatingHealth = false;\n        });\n    }\n\n    showHealth(health) {\n        let vm = this;\n        this.$uibModal.open({\n            templateUrl: 'app/admin/health/health.modal.html',\n            controller: 'JhiHealthModalController',\n            controllerAs: 'vm',\n            size: 'lg',\n            resolve: {\n                currentHealth: function() {\n                    return health;\n                },\n                baseName: function() {\n                    return vm.baseName;\n                },\n                subSystemName: function() {\n                    return vm.subSystemName;\n                }\n\n            }\n        });\n    }\n\n    subSystemName(name) {\n        return this.jhiHealthService.getSubSystemName(name);\n    }\n\n}\n"],"sourceRoot":"/source/"}