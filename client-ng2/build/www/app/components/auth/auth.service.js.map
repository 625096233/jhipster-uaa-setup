{"version":3,"sources":["components/auth/auth.service.ts"],"names":[],"mappings":"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","file":"components/auth/auth.service.js","sourcesContent":["Auth.$inject = ['$rootScope', '$state', '$sessionStorage', '$q', '$translate', 'Principal', 'AuthServerProvider', 'Account', 'LoginService', 'Register', 'Activate', 'Password', 'PasswordResetInit', 'PasswordResetFinish'];\n\nexport function Auth ($rootScope, $state, $sessionStorage, $q, $translate, Principal, AuthServerProvider, Account, LoginService, Register, Activate, Password, PasswordResetInit, PasswordResetFinish) {\n    var service = {\n        activateAccount: activateAccount,\n        authorize: authorize,\n        changePassword: changePassword,\n        createAccount: createAccount,\n        getPreviousState: getPreviousState,\n        login: login,\n        logout: logout,\n        resetPasswordFinish: resetPasswordFinish,\n        resetPasswordInit: resetPasswordInit,\n        resetPreviousState: resetPreviousState,\n        storePreviousState: storePreviousState,\n        updateAccount: updateAccount\n    };\n\n    return service;\n\n    function activateAccount (key, callback) {\n        var cb = callback || angular.noop;\n\n        return Activate.get(key,\n            function (response) {\n                return cb(response);\n            },\n            function (err) {\n                return cb(err);\n            }.bind(this)).$promise;\n    }\n\n    function authorize (force) {\n        var authReturn = Principal.identity(force).then(authThen);\n\n        return authReturn;\n\n        function authThen () {\n            var isAuthenticated = Principal.isAuthenticated();\n\n            // an authenticated user can't access to login and register pages\n            if (isAuthenticated && $rootScope.toState.parent === 'account' && ($rootScope.toState.name === 'login' || $rootScope.toState.name === 'register')) {\n                $state.go('home');\n            }\n\n            // recover and clear previousState after external login redirect (e.g. oauth2)\n            if (isAuthenticated && !$rootScope.fromState.name && getPreviousState()) {\n                var previousState = getPreviousState();\n                resetPreviousState();\n                $state.go(previousState.name, previousState.params);\n            }\n\n            if ($rootScope.toState.data.authorities && $rootScope.toState.data.authorities.length > 0 && !Principal.hasAnyAuthority($rootScope.toState.data.authorities)) {\n                if (isAuthenticated) {\n                    // user is signed in but not authorized for desired state\n                    $state.go('accessdenied');\n                }\n                else {\n                    // user is not authenticated. stow the state they wanted before you\n                    // send them to the login service, so you can return them when you're done\n                    storePreviousState($rootScope.toState.name, $rootScope.toStateParams);\n\n                    // now, send them to the signin state so they can log in\n                    $state.go('accessdenied').then(function() {\n                        LoginService.open();\n                    });\n                }\n            }\n        }\n    }\n\n    function changePassword (newPassword, callback) {\n        var cb = callback || angular.noop;\n\n        return Password.save(newPassword, function () {\n            return cb();\n        }, function (err) {\n            return cb(err);\n        }).$promise;\n    }\n\n    function createAccount (account, callback) {\n        var cb = callback || angular.noop;\n\n        return Register.save(account,\n            function () {\n                return cb(account);\n            },\n            function (err) {\n                this.logout();\n                return cb(err);\n            }.bind(this)).$promise;\n    }\n\n    function login (credentials, callback) {\n        var cb = callback || angular.noop;\n        var deferred = $q.defer();\n\n        AuthServerProvider.login(credentials)\n            .then(loginThen)\n            .catch(function (err) {\n                this.logout();\n                deferred.reject(err);\n                return cb(err);\n            }.bind(this));\n\n        function loginThen (data) {\n            Principal.identity(true).then(function(account) {\n                // After the login the language will be changed to\n                // the language selected by the user during his registration\n                if (account!== null) {\n                    $translate.use(account.langKey).then(function () {\n                        $translate.refresh();\n                    });\n                }\n                deferred.resolve(data);\n            });\n            return cb();\n        }\n\n        return deferred.promise;\n    }\n\n\n    function logout () {\n        AuthServerProvider.logout();\n        Principal.authenticate(null);\n    }\n\n    function resetPasswordFinish (keyAndPassword, callback) {\n        var cb = callback || angular.noop;\n\n        return PasswordResetFinish.save(keyAndPassword, function () {\n            return cb();\n        }, function (err) {\n            return cb(err);\n        }).$promise;\n    }\n\n    function resetPasswordInit (mail, callback) {\n        var cb = callback || angular.noop;\n\n        return PasswordResetInit.save(mail, function() {\n            return cb();\n        }, function (err) {\n            return cb(err);\n        }).$promise;\n    }\n\n    function updateAccount (account, callback) {\n        var cb = callback || angular.noop;\n\n        return Account.save(account,\n            function () {\n                return cb(account);\n            },\n            function (err) {\n                return cb(err);\n            }.bind(this)).$promise;\n    }\n\n    function getPreviousState() {\n        var previousState = $sessionStorage.previousState;\n        return previousState;\n    }\n\n    function resetPreviousState() {\n        delete $sessionStorage.previousState;\n    }\n\n    function storePreviousState(previousStateName, previousStateParams) {\n        var previousState = { \"name\": previousStateName, \"params\": previousStateParams };\n        $sessionStorage.previousState = previousState;\n    }\n}\n"],"sourceRoot":"/source/"}