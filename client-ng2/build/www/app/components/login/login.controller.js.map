{"version":3,"sources":["components/login/login.controller.ts"],"names":[],"mappings":";;;IAEA,yBAAiC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,iBAAiB;QAClF,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,EAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC/B,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;QACnB,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC;QACpB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;QACjB,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnB,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvB,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;QACrB,EAAE,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QAC/C,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;QAEnB,QAAQ,CAAC,cAAY,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA,CAAC,CAAC,CAAC;QAE7D;YACI,EAAE,CAAC,WAAW,GAAG;gBACb,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;aACnB,CAAC;YACF,EAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAC/B,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;QAED,eAAgB,KAAK;YACjB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC;gBACP,QAAQ,EAAE,EAAE,CAAC,QAAQ;gBACrB,QAAQ,EAAE,EAAE,CAAC,QAAQ;gBACrB,UAAU,EAAE,EAAE,CAAC,UAAU;aAC5B,CAAC,CAAC,IAAI,CAAC;gBACJ,EAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBAC/B,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU;oBACxE,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,aAAa,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;oBAClF,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACtB,CAAC;gBAED,UAAU,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;gBAE/C,8FAA8F;gBAC9F,+EAA+E;gBAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;oBAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC5C,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;gBACxD,CAAC;YACL,CAAC,CAAC,CAAC,KAAK,CAAC;gBACL,EAAE,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;QAED;YACI,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC1B,CAAC;QAED;YACI,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IA9DD,6CA8DC,CAAA;;;;YAhED,eAAe,CAAC,OAAO,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,mBAAmB,CAAC,CAAC","file":"components/login/login.controller.js","sourcesContent":["LoginController.$inject = ['$rootScope', '$state', '$timeout', 'Auth', '$uibModalInstance'];\n\nexport function LoginController ($rootScope, $state, $timeout, Auth, $uibModalInstance) {\n    var vm = this;\n\n    vm.authenticationError = false;\n    vm.cancel = cancel;\n    vm.credentials = {};\n    vm.login = login;\n    vm.password = null;\n    vm.register = register;\n    vm.rememberMe = true;\n    vm.requestResetPassword = requestResetPassword;\n    vm.username = null;\n\n    $timeout(function (){angular.element('#username').focus();});\n\n    function cancel () {\n        vm.credentials = {\n            username: null,\n            password: null,\n            rememberMe: true\n        };\n        vm.authenticationError = false;\n        $uibModalInstance.dismiss('cancel');\n    }\n\n    function login (event) {\n        event.preventDefault();\n        Auth.login({\n            username: vm.username,\n            password: vm.password,\n            rememberMe: vm.rememberMe\n        }).then(function () {\n            vm.authenticationError = false;\n            $uibModalInstance.close();\n            if ($state.current.name === 'register' || $state.current.name === 'activate' ||\n                $state.current.name === 'finishReset' || $state.current.name === 'requestReset') {\n                $state.go('home');\n            }\n\n            $rootScope.$broadcast('authenticationSuccess');\n\n            // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n            // since login is succesful, go to stored previousState and clear previousState\n            if (Auth.getPreviousState()) {\n                var previousState = Auth.getPreviousState();\n                Auth.resetPreviousState();\n                $state.go(previousState.name, previousState.params);\n            }\n        }).catch(function () {\n            vm.authenticationError = true;\n        });\n    }\n\n    function register () {\n        $uibModalInstance.dismiss('cancel');\n        $state.go('register');\n    }\n\n    function requestResetPassword () {\n        $uibModalInstance.dismiss('cancel');\n        $state.go('requestReset');\n    }\n}\n"],"sourceRoot":"/source/"}