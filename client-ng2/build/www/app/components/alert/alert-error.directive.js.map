{"version":3,"sources":["components/alert/alert-error.directive.ts"],"names":[],"mappings":"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","file":"components/alert/alert-error.directive.js","sourcesContent":["(function() {\n    'use strict';\n\n    var jhiAlertError = {\n        template: '<div class=\"alerts\" ng-cloak=\"\">' +\n                        '<div ng-repeat=\"alert in $ctrl.alerts\" ng-class=\"[alert.position, {\\'toast\\': alert.toast}]\">' +\n                            '<uib-alert ng-cloak=\"\" type=\"{{alert.type}}\" close=\"alert.close($ctrl.alerts)\"><pre>{{ alert.msg }}</pre></uib-alert>' +\n                        '</div>' +\n                  '</div>',\n        controller: jhiAlertErrorController\n    };\n\n    angular\n        .module('uaaSetupApp.common')\n        .component('jhiAlertError', jhiAlertError);\n\n    jhiAlertErrorController.$inject = ['$scope', 'AlertService', '$rootScope', '$translate'];\n\n    function jhiAlertErrorController ($scope, AlertService, $rootScope, $translate) {\n        var vm = this;\n\n        vm.alerts = [];\n\n        function addErrorAlert (message, key?, data?) {\n            key = key && key !== null ? key : message;\n            vm.alerts.push(\n                AlertService.add(\n                    {\n                        type: 'danger',\n                        msg: key,\n                        params: data,\n                        timeout: 5000,\n                        toast: AlertService.isToast(),\n                        scoped: true\n                    },\n                    vm.alerts\n                )\n            );\n        }\n\n        var cleanHttpErrorListener = $rootScope.$on('uaaSetupApp.httpError', function (event, httpResponse) {\n            var i;\n            event.stopPropagation();\n            switch (httpResponse.status) {\n            // connection refused, server not reachable\n            case 0:\n                addErrorAlert('Server not reachable','error.server.not.reachable');\n                break;\n\n            case 400:\n                var errorHeader = httpResponse.headers('X-uaaSetupApp-error');\n                var entityKey = httpResponse.headers('X-uaaSetupApp-params');\n                if (errorHeader) {\n                    var entityName = $translate.instant('global.menu.entities.' + entityKey);\n                    addErrorAlert(errorHeader, errorHeader, {entityName: entityName});\n                } else if (httpResponse.data && httpResponse.data.fieldErrors) {\n                    for (i = 0; i < httpResponse.data.fieldErrors.length; i++) {\n                        var fieldError = httpResponse.data.fieldErrors[i];\n                        // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                        var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                        var fieldName = $translate.instant('uaaSetupApp.' + fieldError.objectName + '.' + convertedField);\n                        addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, {fieldName: fieldName});\n                    }\n                } else if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message, httpResponse.data.message, httpResponse.data);\n                } else {\n                    addErrorAlert(httpResponse.data);\n                }\n                break;\n\n            case 404:\n                addErrorAlert('Not found','error.url.not.found');\n                break;\n\n            default:\n                if (httpResponse.data && httpResponse.data.message) {\n                    addErrorAlert(httpResponse.data.message);\n                } else {\n                    addErrorAlert(angular.toJson(httpResponse));\n                }\n            }\n        });\n\n        $scope.$on('$destroy', function () {\n            if(angular.isDefined(cleanHttpErrorListener) && cleanHttpErrorListener !== null){\n                cleanHttpErrorListener();\n                vm.alerts = [];\n            }\n        });\n    }\n})();\n"],"sourceRoot":"/source/"}