{"version":3,"sources":["blocks/interceptor/notification.interceptor.ts"],"names":[],"mappings":";;;IAEA,iCAAyC,EAAE,EAAE,YAAY;QACrD,IAAI,OAAO,GAAG;YACV,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC;QAEf,kBAAmB,QAAQ;YACvB,IAAI,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YACvD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC7B,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAG,QAAQ,CAAC,OAAO,CAAC,sBAAsB,CAAC,EAAC,CAAC,CAAC;YACxF,CAAC;YACD,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;IACL,CAAC;IAdD,6DAcC,CAAA;;;;YAhBD,uBAAuB,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC","file":"blocks/interceptor/notification.interceptor.js","sourcesContent":["NotificationInterceptor.$inject = ['$q', 'AlertService'];\n\nexport function NotificationInterceptor ($q, AlertService) {\n    var service = {\n        response: response\n    };\n\n    return service;\n\n    function response (response) {\n        var alertKey = response.headers('X-uaaSetupApp-alert');\n        if (angular.isString(alertKey)) {\n            AlertService.success(alertKey, { param : response.headers('X-uaaSetupApp-params')});\n        }\n        return response;\n    }\n}\n"],"sourceRoot":"/source/"}